{"ast":null,"code":"import _slicedToArray from\"/home/mick0/Documents/FSO/FSO_pt3-frontend-v2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import PhonebookForm,{PhonebookFilter,PhonebookList,SuccessBox,FailureBox}from'./components/Phonebook';import personsService from'./services/persons';// Phonebook exercise\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){// Initialize states\n// Array of person-objects\nvar _useState=useState([{name:'',number:''}]),_useState2=_slicedToArray(_useState,2),persons=_useState2[0],setPersons=_useState2[1];// Next three states for user input\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),newName=_useState4[0],setNewName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),newNumber=_useState6[0],setNewNumber=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),newSearch=_useState8[0],setNewSearch=_useState8[1];// Next two states for messages to display\nvar _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),success=_useState10[0],setNewSuccess=_useState10[1];var _useState11=useState(null),_useState12=_slicedToArray(_useState11,2),failure=_useState12[0],setNewFailure=_useState12[1];// Function to reset successmessage\nvar resetSuccess=function resetSuccess(){setTimeout(function(){setNewSuccess(null);},5000);};// Function to reset failuremessage\nvar resetFailure=function resetFailure(){setTimeout(function(){setNewFailure(null);},5000);};// Function to get list of persons from server\nvar fetchPersons=function fetchPersons(){return personsService.getAllPersons().then(function(response){setPersons(response.data);}).catch(function(error){if(error.response){setNewFailure(\"Server responded, but there was another fault.\\nCheck your console.\");console.log(error.response.data);console.log(error.response.headers);console.log(error.response.status);}else if(error.request){setNewFailure(\"Request made to fetch persons, but no response received.\\nSee console.\");console.log(error.request);}else{setNewFailure(\"Error: \",error.message);console.log(error.message);}resetFailure();});};// Get persons on first render\nuseEffect(fetchPersons,[]);// Function to add name to persons\nvar addName=function addName(event){// Fetch persons again to avoid conflict/duplicate entry from another client\n// Doesn't really work tho because we'd have to wait\n// fetchPersons()\nevent.preventDefault();// Temporary object for person\nvar nameObject={name:newName,number:newNumber};// Check for duplicate name-entry\nvar filtered=persons.filter(function(person){return person.name.toLowerCase()===newName.toLowerCase();});if(filtered.length>0){// Duplicate entry -> ask for edit\nvar msg=\"\".concat(filtered[0].name,\" is already in the list.\\nWanna change number?\");if(window.confirm(msg)){personsService.changePerson(filtered[0],nameObject).then(function(response){// Success -> add response data so local persons matches server\nsetPersons(persons.map(function(person){return person.id!==response.data.id?person:response.data;}));setNewSuccess(\"Changed \".concat(response.data.name));resetSuccess();}).catch(function(error){if(error.response){setNewFailure(\"\".concat(error.response.data.error));resetFailure();console.log(error.response.data);console.log(error.response.headers);console.log(error.response.status);}else if(error.request){setNewFailure(\"Request to edit person sent, but no response.\\nSee console.\");console.log(error.request);}else{setNewFailure(error.message);}resetFailure();});}}else{// Not a duplicate -> just add entry\npersonsService.postPerson(nameObject).then(function(response){// Success -> just add response data so local persons matches server\nsetPersons(persons.concat(response.data));setNewSuccess(\"Person added.\");resetSuccess();}).catch(function(error){if(error.response){setNewFailure(\"Server responded, but there was another fault.\\nCheck your console.\");console.log(error.response.data);console.log(error.response.headers);console.log(error.response.status);}else if(error.request){setNewFailure(\"Request to add person sent, but no response.\\nSee console.\");console.log(error.request);}else{setNewFailure(error.message);}resetFailure();});}// Reset input-states again\nsetNewName(\"\");setNewNumber(\"\");};// Function to handle input to name field\nvar handleNewName=function handleNewName(event){setNewName(event.target.value);};// Function to handle input to number field\nvar handleNewNumber=function handleNewNumber(event){setNewNumber(event.target.value);};// Function to handle input to search field\nvar handleNewSearch=function handleNewSearch(event){setNewSearch(event.target.value);};// Function to remove person\nvar handleRemoval=function handleRemoval(person){var msg=\"Delete \".concat(person.name,\"?\");if(window.confirm(msg)){// Check if person already removed by another client\npersonsService.rmPerson(person).then(function(response){if(response.status===204){setPersons(persons.filter(function(removed){return removed.id!==person.id;}));setNewSuccess(\"Removed \".concat(person.name));resetSuccess();}}).catch(function(error){if(error.response){setNewFailure(\"Server responded, but there was another fault (person probably already removed).\\nCheck your console.\");console.log(error.response.data);console.log(error.response.headers);console.log(error.response.status);}else if(error.request){setNewFailure(\"Requested removal of person, but no response.\\nSee console.\");console.log(error.request);}else{setNewFailure(error.message);}resetFailure();// refetch persons in case there was conflict with server\nfetchPersons();});}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(SuccessBox,{message:success}),/*#__PURE__*/_jsx(FailureBox,{message:failure}),/*#__PURE__*/_jsx(\"h2\",{children:\"Phonebook\"}),/*#__PURE__*/_jsx(PhonebookForm,{addName:addName,newName:newName,handleNewName:handleNewName,newNumber:newNumber,handleNewNumber:handleNewNumber}),/*#__PURE__*/_jsx(\"h2\",{children:\"Numbers\"}),/*#__PURE__*/_jsx(PhonebookFilter,{newSearch:newSearch,handleNewSearch:handleNewSearch}),/*#__PURE__*/_jsx(PhonebookList,{newSearch:newSearch,persons:persons,rmFunction:handleRemoval})]});};export default App;","map":{"version":3,"sources":["/home/mick0/Documents/FSO/FSO_pt3-frontend-v2/src/App.js"],"names":["React","useState","useEffect","PhonebookForm","PhonebookFilter","PhonebookList","SuccessBox","FailureBox","personsService","App","name","number","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newSearch","setNewSearch","success","setNewSuccess","failure","setNewFailure","resetSuccess","setTimeout","resetFailure","fetchPersons","getAllPersons","then","response","data","catch","error","console","log","headers","status","request","message","addName","event","preventDefault","nameObject","filtered","filter","person","toLowerCase","length","msg","window","confirm","changePerson","map","id","postPerson","concat","handleNewName","target","value","handleNewNumber","handleNewSearch","handleRemoval","rmPerson","removed"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PhonebookForm, {\n  PhonebookFilter,\n  PhonebookList,\n  SuccessBox,\n  FailureBox } from './components/Phonebook'\nimport personsService from './services/persons'\n\n// Phonebook exercise\nconst App = () => {\n  // Initialize states\n  // Array of person-objects\n  const [persons, setPersons] = useState([\n    {name: '', number: ''}\n  ])\n  // Next three states for user input\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newSearch, setNewSearch] = useState('')\n  // Next two states for messages to display\n  const [success, setNewSuccess] = useState(null)\n  const [failure, setNewFailure] = useState(null)\n  // Function to reset successmessage\n  const resetSuccess = () => {\n    setTimeout( () => {\n      setNewSuccess(null)\n    }, 5000)\n  }\n  // Function to reset failuremessage\n  const resetFailure = () => {\n    setTimeout( () => {\n      setNewFailure(null)\n    }, 5000)\n  }\n  // Function to get list of persons from server\n  const fetchPersons = () =>\n    personsService.getAllPersons()\n    .then(response => {\n      setPersons(response.data)\n    }).catch(error => {\n      if (error.response) {\n        setNewFailure(\"Server responded, but there was another fault.\\nCheck your console.\")\n        console.log(error.response.data)\n        console.log(error.response.headers)\n        console.log(error.response.status)\n      } else if(error.request) {\n        setNewFailure(\"Request made to fetch persons, but no response received.\\nSee console.\")\n        console.log(error.request)\n      } else {\n        setNewFailure(\"Error: \", error.message)\n        console.log(error.message)\n      }\n      resetFailure()\n    })\n  // Get persons on first render\n  useEffect(fetchPersons, [])\n  // Function to add name to persons\n  const addName = (event) => {\n    // Fetch persons again to avoid conflict/duplicate entry from another client\n    // Doesn't really work tho because we'd have to wait\n    // fetchPersons()\n    event.preventDefault()\n    // Temporary object for person\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    // Check for duplicate name-entry\n    const filtered = persons.filter(person =>\n        person.name.toLowerCase() === newName.toLowerCase())\n    if (filtered.length > 0) {\n      // Duplicate entry -> ask for edit\n      const msg = `${filtered[0].name} is already in the list.\\nWanna change number?`\n      if (window.confirm(msg)) {\n        personsService.changePerson(filtered[0], nameObject)\n        .then(response => {\n          // Success -> add response data so local persons matches server\n          setPersons(persons.map( person => person.id !== response.data.id\n            ? person\n            : response.data))\n            setNewSuccess(`Changed ${response.data.name}`)\n            resetSuccess()\n          }\n        ).catch(error => {\n          if (error.response) {\n            setNewFailure(`${error.response.data.error}`)\n            resetFailure()\n            console.log(error.response.data)\n            console.log(error.response.headers)\n            console.log(error.response.status)\n          } else if(error.request) {\n            setNewFailure(\"Request to edit person sent, but no response.\\nSee console.\")\n            console.log(error.request)\n          } else {\n            setNewFailure(error.message)\n          }\n          resetFailure()\n          }\n        )\n      }\n    } else { // Not a duplicate -> just add entry\n      personsService.postPerson(nameObject)\n      .then(response => {\n        // Success -> just add response data so local persons matches server\n        setPersons(persons.concat(response.data))\n        setNewSuccess(\"Person added.\")\n        resetSuccess()\n        }\n      ).catch(error => {\n        if(error.response) {\n          setNewFailure(\"Server responded, but there was another fault.\\nCheck your console.\")\n          console.log(error.response.data)\n          console.log(error.response.headers)\n          console.log(error.response.status)\n        } else if (error.request) {\n          setNewFailure(\"Request to add person sent, but no response.\\nSee console.\")\n          console.log(error.request)\n        } else {\n          setNewFailure(error.message)\n        }\n        resetFailure()\n      })\n    }\n    // Reset input-states again\n    setNewName(\"\")\n    setNewNumber(\"\")\n  }\n  // Function to handle input to name field\n  const handleNewName = (event) => {\n    setNewName(event.target.value)\n  }\n  // Function to handle input to number field\n  const handleNewNumber = (event) => {\n    setNewNumber(event.target.value)\n  }\n  // Function to handle input to search field\n  const handleNewSearch = (event) => {\n    setNewSearch(event.target.value)\n  }\n  // Function to remove person\n  const handleRemoval = (person) => {\n    const msg = `Delete ${person.name}?`\n    if (window.confirm(msg)) {\n      // Check if person already removed by another client\n      personsService\n      .rmPerson(person)\n      .then(response => {\n        if (response.status === 204) {\n          setPersons(persons.filter( removed => removed.id !== person.id))\n          setNewSuccess(`Removed ${person.name}`)\n          resetSuccess()\n        }\n      }).catch(error => {\n        if (error.response) {\n          setNewFailure(\"Server responded, but there was another fault (person probably already removed).\\nCheck your console.\")\n          console.log(error.response.data)\n          console.log(error.response.headers)\n          console.log(error.response.status)\n        } else if(error.request) {\n          setNewFailure(\"Requested removal of person, but no response.\\nSee console.\")\n          console.log(error.request)\n        } else {\n          setNewFailure(error.message)\n        }\n        resetFailure()\n        // refetch persons in case there was conflict with server\n        fetchPersons()\n      })\n    }\n  }\n\n  return (\n    <div>\n      <SuccessBox message={success}/>\n      <FailureBox message={failure}/>\n      <h2>Phonebook</h2>\n      <PhonebookForm addName={addName} newName={newName} handleNewName={handleNewName}\n        newNumber={newNumber} handleNewNumber={handleNewNumber}/>\n      <h2>Numbers</h2>\n      <PhonebookFilter newSearch={newSearch} handleNewSearch={handleNewSearch}/>\n      <PhonebookList newSearch={newSearch} persons={persons} rmFunction={handleRemoval}/>\n\n    </div>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}